<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Awei</title>
    <link>https://wangwei9160.github.io/post/</link>
    <description>Recent content in Posts on Awei</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 30 Mar 2021 10:05:09 +0800</lastBuildDate>
    
	<atom:link href="https://wangwei9160.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Stl</title>
      <link>https://wangwei9160.github.io/post/stl/</link>
      <pubDate>Tue, 30 Mar 2021 10:05:09 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/stl/</guid>
      <description>STL 整理stl的内容，各个.h文件的主要内容 六大组件 容器(containers)：各种数据结构，如vector,list,deque,set,</description>
    </item>
    
    <item>
      <title>面试题</title>
      <link>https://wangwei9160.github.io/post/interview/</link>
      <pubDate>Thu, 25 Mar 2021 12:08:09 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/interview/</guid>
      <description>面试题 const 和 define define 只是一个常数的名字，在编译时编译器会把它替换成常数，仅仅是提升了代码的可读性。 const，是一个不能修改其值的变量，const</description>
    </item>
    
    <item>
      <title>Shell</title>
      <link>https://wangwei9160.github.io/post/shell/</link>
      <pubDate>Thu, 25 Mar 2021 10:35:51 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/shell/</guid>
      <description>Shell命令 python和shell shell更适合做批处理。shell需要各种命令工具支持。 python是通用语言。强扩展性，可读性更强</description>
    </item>
    
    <item>
      <title>Template</title>
      <link>https://wangwei9160.github.io/post/template/</link>
      <pubDate>Tue, 23 Mar 2021 20:33:51 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/template/</guid>
      <description>模块与泛型编程</description>
    </item>
    
    <item>
      <title>面向对象程序设计</title>
      <link>https://wangwei9160.github.io/post/oop/</link>
      <pubDate>Mon, 22 Mar 2021 23:00:56 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/oop/</guid>
      <description>面向对象 OOP 继承 通过继承联系在一起的类构成一种层次关系。通常在层次关系的根部有一个基类，其他类则直接或间接地从基类继承而来，这些继承得到的类统</description>
    </item>
    
    <item>
      <title>重载运算与类型转换</title>
      <link>https://wangwei9160.github.io/post/operator/</link>
      <pubDate>Mon, 22 Mar 2021 14:54:42 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/operator/</guid>
      <description>重载运算与类型转换 基本概念 关键字operator和其后要定义的运算符号共同组成。 运算符作用域内置类型的运算对象时，无法改变该运算符的含义。可</description>
    </item>
    
    <item>
      <title>多线程</title>
      <link>https://wangwei9160.github.io/post/thread/</link>
      <pubDate>Sun, 21 Mar 2021 14:00:09 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/thread/</guid>
      <description>多线程 进程 进程是具有一定独立功能的程序关于某个数据集合的一次运行过程，是系统进行资源分配和调度的一个独立单位。 进程一般具有： 动态性、并发性、</description>
    </item>
    
    <item>
      <title>网络编程</title>
      <link>https://wangwei9160.github.io/post/socket/</link>
      <pubDate>Sat, 20 Mar 2021 10:46:16 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/socket/</guid>
      <description>网络编程 TCP/IP协议 应用层、运输层(tcp/udp)、网络层(ip)、网络接口层。 运输层 主要包含两种协议： 传输控制协议-TCP：提供面向</description>
    </item>
    
    <item>
      <title>拷贝控制</title>
      <link>https://wangwei9160.github.io/post/copycontrol/</link>
      <pubDate>Fri, 19 Mar 2021 15:48:48 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/copycontrol/</guid>
      <description>拷贝控制 当定义一个类时，总显式或隐式地指定在此类型的对象拷贝、移动、赋值和销毁时做什么。 一个类通过定义五种特殊的成员函数来控制这些操作，包括</description>
    </item>
    
    <item>
      <title>Leetcode第230场周赛</title>
      <link>https://wangwei9160.github.io/post/leetcode230/</link>
      <pubDate>Thu, 18 Mar 2021 14:59:48 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/leetcode230/</guid>
      <description>leetcode周赛230 目录 统计匹配检索规则的物品数量 最接近目标价格的甜点成本 通过最少操作次数使数组的和相等 车队II 统计匹配检索规则的物品</description>
    </item>
    
    <item>
      <title>动态内存</title>
      <link>https://wangwei9160.github.io/post/dynamicallyallocate/</link>
      <pubDate>Wed, 17 Mar 2021 14:36:36 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/dynamicallyallocate/</guid>
      <description>动态内存 全局对象在程序启动时分配，在程序结束时销毁；局部自动对象，当进入其定义所在的程序块时被创建，在离开块时销毁；局部static对象在第</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://wangwei9160.github.io/post/git/</link>
      <pubDate>Sat, 13 Mar 2021 13:27:30 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/git/</guid>
      <description>github repository 使用github创建仓库时的步骤，windows 创建仓库 1、 new repository 在github界面选择new一个repository 2、设置Reposi</description>
    </item>
    
    <item>
      <title>Allocator</title>
      <link>https://wangwei9160.github.io/post/allocator/</link>
      <pubDate>Fri, 12 Mar 2021 11:34:39 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/allocator/</guid>
      <description>allocator 标准库allocator类定义在头文件memory中，它帮助我们将内存分配和独享构造分离开来。提供一种类型感知的内存分配方法，它分配的内存</description>
    </item>
    
    <item>
      <title>Word</title>
      <link>https://wangwei9160.github.io/post/word/</link>
      <pubDate>Mon, 01 Mar 2021 11:53:30 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/word/</guid>
      <description>英语单词 or 小短文 21.03.01</description>
    </item>
    
    <item>
      <title>C&#43;&#43;</title>
      <link>https://wangwei9160.github.io/post/cplusplus/</link>
      <pubDate>Sun, 28 Feb 2021 17:47:04 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/cplusplus/</guid>
      <description>前言 内容参考自c++ primer 第五版和网上的一些资料。仅供自己学习参考使用。 主要形式是通过实现部分STL库文件，增加对STL库的理解。会逐步进行完善</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://wangwei9160.github.io/post/linux/</link>
      <pubDate>Wed, 20 Jan 2021 00:20:24 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/linux/</guid>
      <description>Linux 下查看进程内的线程情况 方法一：ps命令 ps -ef | grep 进程关键字 ps -T -p 线程 方法二：top命令 top -H -p 线程 makefile .c文件到.exe文件 hello.c &amp;ndash;&amp;gt; 预处理 -E &amp;ndash;&amp;gt; hello.i &amp;ndash;&amp;gt; 编</description>
    </item>
    
    <item>
      <title>codeforces</title>
      <link>https://wangwei9160.github.io/post/codeforces634/</link>
      <pubDate>Wed, 15 Apr 2020 01:00:00 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/codeforces634/</guid>
      <description>codeforces 目录A. Candies and Two SistersB. Construct the StringC. Two Teams ComposingD. Anti-SudokuE. Three Blocks PalindromeA. Candies and Two Sisters 题目： There are two sisters Alice and Betty. You have n candies. You want to distribute these n candies between two sisters in such a way that: lice will get a (a&amp;gt;0) candies; Betty will get b (b&amp;gt;0) candies; each sister will get some integer</description>
    </item>
    
    <item>
      <title>leetcode第184场周赛</title>
      <link>https://wangwei9160.github.io/post/leetcode184/</link>
      <pubDate>Sun, 12 Apr 2020 18:00:00 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/leetcode184/</guid>
      <description>leetcode第184场周赛 目录 数组中的字符串匹配 查询带键的排列 HTML 实体解析器 给 N x 3 网格图涂色的方案数 数组中的字符串匹配 题目链接 题目： 给你</description>
    </item>
    
    <item>
      <title>Min_max</title>
      <link>https://wangwei9160.github.io/post/min_max/</link>
      <pubDate>Thu, 09 Apr 2020 21:22:44 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/min_max/</guid>
      <description></description>
    </item>
    
    <item>
      <title>New_test</title>
      <link>https://wangwei9160.github.io/post/new_test/</link>
      <pubDate>Wed, 08 Apr 2020 21:59:56 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/new_test/</guid>
      <description>这里是一篇最新的测试文章！ 重新测试！</description>
    </item>
    
  </channel>
</rss>