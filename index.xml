<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Awei</title>
    <link>https://wangwei9160.github.io/</link>
    <description>Recent content on Awei</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 12 Apr 2020 18:00:00 +0800</lastBuildDate>
    
        <atom:link href="https://wangwei9160.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>leetcode第184场周赛</title>
      <link>https://wangwei9160.github.io/post/leetcode%E5%91%A8%E8%B5%9B184/</link>
      <pubDate>Sun, 12 Apr 2020 18:00:00 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/leetcode%E5%91%A8%E8%B5%9B184/</guid>
      
        <description>&lt;h1 id=&#34;leetcode第184场周赛&#34;&gt;leetcode第184场周赛&lt;/h1&gt;
&lt;h3 id=&#34;a-id0目录a&#34;&gt;&lt;!-- raw HTML omitted --&gt;目录&lt;!-- raw HTML omitted --&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;#a-id1%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8Da&#34;&gt;数组中的字符串匹配&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;#a-id2-%E6%9F%A5%E8%AF%A2%E5%B8%A6%E9%94%AE%E7%9A%84%E6%8E%92%E5%88%97a&#34;&gt;查询带键的排列&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;#a-id3-html-%E5%AE%9E%E4%BD%93%E8%A7%A3%E6%9E%90%E5%99%A8a&#34;&gt;HTML 实体解析器&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;#a-id4%E7%BB%99-n-x-3-%E7%BD%91%E6%A0%BC%E5%9B%BE%E6%B6%82%E8%89%B2%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0-a&#34;&gt;给 N x 3 网格图涂色的方案数&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;a-id1数组中的字符串匹配a&#34;&gt;&lt;!-- raw HTML omitted --&gt;数组中的字符串匹配&lt;!-- raw HTML omitted --&gt;&lt;/h4&gt;
&lt;h6 id=&#34;题目&#34;&gt;题目：&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个字符串数组 words ，数组中的每个字符串都可以看作是一个单词。请你按 任意 顺序返回 words 中是其他单词的子字符串的所有单词。
如果你可以删除 words[j] 最左侧和/或最右侧的若干字符得到 word[i] ，那么字符串 words[i] 就是 words[j] 的一个子字符串。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;思路&#34;&gt;思路：&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;利用find函数直接暴力匹配&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;代码&#34;&gt;代码：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;vector&amp;lt;string&amp;gt; stringMatching(vector&amp;lt;string&amp;gt;&amp;amp; words) {
    vector&amp;lt;string&amp;gt; ans;
    for(auto x : words){
        for(auto y : words){
            if(x == y) continue;
            if(y.find(x) != -1 ){ans.push_back(x);break;}
        }
    }
    return ans;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;a-id2-查询带键的排列a&#34;&gt;&lt;!-- raw HTML omitted --&gt; 查询带键的排列&lt;!-- raw HTML omitted --&gt;&lt;/h4&gt;
&lt;h6 id=&#34;题目-1&#34;&gt;题目：&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个待查数组 queries ，数组中的元素为 1 到 m 之间的正整数。 请你根据以下规则处理所有待查项 queries[i]（从 i=0 到 i=queries.length-1）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一开始，排列 P=[1,2,3,&amp;hellip;,m]。&lt;/li&gt;
&lt;li&gt;对于当前的 i ，请你找出待查项 queries[i] 在排列 P 中的位置（下标从 0 开始），然后将其从原位置移动到排列 P 的起始位置（即下标为 0 处）。注意， queries[i] 在 P 中的位置就是queries[i] 的查询结果。
请你以数组形式返回待查数组  queries 的查询结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;思路-1&#34;&gt;思路：&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;模拟一遍就好了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;代码-1&#34;&gt;代码：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;vector&amp;lt;int&amp;gt; processQueries(vector&amp;lt;int&amp;gt;&amp;amp; queries, int m) {
    int mp[1002];
    for(int i = 0 ; i &amp;lt; m ; i++){
        mp[i] = i+1;
    }
    vector&amp;lt;int&amp;gt; ans;
    for(auto x : queries){
        if(mp[0] == x) {ans.push_back(0);continue;}
        int j = m-1;
        while( j &amp;gt; 0 &amp;amp;&amp;amp; mp[j] != x) {j--;}
        ans.push_back(j);
        for(int k = j ; k &amp;gt; 0 ; k--){
            mp[k] = mp[k-1];
        }
        mp[0] = x;
        
    }
    return ans;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;a-id3-html-实体解析器a&#34;&gt;&lt;!-- raw HTML omitted --&gt; HTML 实体解析器&lt;!-- raw HTML omitted --&gt;&lt;/h4&gt;
&lt;h6 id=&#34;题目-2&#34;&gt;题目：&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;「HTML 实体解析器」 是一种特殊的解析器，它将 HTML 代码作为输入，并用字符本身替换掉所有这些特殊的字符实体。
HTML 里这些特殊字符和它们对应的字符实体包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双引号：字符实体为 &amp;quot; ，对应的字符是 &amp;quot; 。&lt;/li&gt;
&lt;li&gt;单引号：字符实体为 &#39; ，对应的字符是 &#39; 。&lt;/li&gt;
&lt;li&gt;与符号：字符实体为 &amp;amp; ，对应对的字符是 &amp;amp; 。&lt;/li&gt;
&lt;li&gt;大于号：字符实体为 &amp;gt; ，对应的字符是 &amp;gt; 。&lt;/li&gt;
&lt;li&gt;小于号：字符实体为 &amp;lt; ，对应的字符是 &amp;lt; 。&lt;/li&gt;
&lt;li&gt;斜线号：字符实体为 ⁄ ，对应的字符是 / 。
给你输入字符串 text ，请你实现一个 HTML 实体解析器，返回解析器解析后的结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;思路-2&#34;&gt;思路：&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;利用replace函数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;代码-2&#34;&gt;代码：&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;def entityParser(self, text: str) -&amp;gt; str:
    text = text.replace(&#39;&amp;amp;quot;&#39;,&#39;&amp;quot;&#39;)
    text = text.replace(&#39;&amp;amp;apos;&#39;,&#39;\&#39;&#39;)
    text = text.replace(&#39;&amp;amp;amp;&#39;,&#39;&amp;amp;&#39;)
    text = text.replace(&#39;&amp;amp;gt;&#39;,&#39;&amp;gt;&#39;)
    text = text.replace(&#39;&amp;amp;lt;&#39;,&#39;&amp;lt;&#39;)
    text = text.replace(&#39;&amp;amp;frasl;&#39;,&#39;/&#39;)
    return text
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;a-id4给-n-x-3-网格图涂色的方案数-a&#34;&gt;&lt;!-- raw HTML omitted --&gt;给 N x 3 网格图涂色的方案数 &lt;!-- raw HTML omitted --&gt;&lt;/h4&gt;
&lt;h6 id=&#34;题目-3&#34;&gt;题目：&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;你有一个 n x 3 的网格图 grid ，你需要用 红，黄，绿 三种颜色之一给每一个格子上色，且确保相邻格子颜色不同（也就是有相同水平边或者垂直边的格子颜色不同）。
给你网格图的行数 n 。
请你返回给 grid 涂色的方案数。由于答案可能会非常大，请你返回答案对 10^9 + 7 取余的结果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;思路-3&#34;&gt;思路：&lt;/h6&gt;
&lt;blockquote&gt;
&lt;p&gt;初始化第一行的所有状态
接下来计算每一行的所有状态的出现的次数
条件（相同水平边或者垂直边的格子颜色不同）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6 id=&#34;代码-3&#34;&gt;代码:&lt;/h6&gt;
&lt;pre&gt;&lt;code&gt;long long dp[5002][3][3][3];
const int mod = 1e9+7;
int numOfWays(int n) {
    for(int i=0;i&amp;lt;3;i++)for(int j=0;j&amp;lt;3;j++)for(int k=0;k&amp;lt;3;k++)if(i!=j&amp;amp;&amp;amp;j!=k) dp[1][i][j][k]=1;
    for(int p=2;p&amp;lt;=n;p++){
        for(int i=0;i&amp;lt;3;i++)
            for(int j=0;j&amp;lt;3;j++)
                for(int k=0;k&amp;lt;3;k++)
                    for(int ii=0;ii&amp;lt;3;ii++)
                        for(int jj=0;jj&amp;lt;3;jj++)
                            for(int kk=0;kk&amp;lt;3;kk++)
                                if(i!=j&amp;amp;&amp;amp;j!=k&amp;amp;&amp;amp;ii!=i&amp;amp;&amp;amp;jj!=j&amp;amp;&amp;amp;kk!=k) 
                                    (dp[p][i][j][k] += dp[p-1][ii][jj][kk]) %= mod;
    }
    long long ans =0;
    for(int i=0;i&amp;lt;3;i++)for(int j=0;j&amp;lt;3;j++)for(int k=0;k&amp;lt;3;k++)if(i!=j&amp;amp;&amp;amp;j!=k) ans+=dp[n][i][j][k];
    ans%=mod;
    return ans;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href=&#34;#a-id0%E7%9B%AE%E5%BD%95a&#34;&gt;回到目录&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Min_max</title>
      <link>https://wangwei9160.github.io/post/min_max/</link>
      <pubDate>Thu, 09 Apr 2020 21:22:44 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/min_max/</guid>
      
        <description></description>
      
    </item>
    
    <item>
      <title>New_test</title>
      <link>https://wangwei9160.github.io/post/new_test/</link>
      <pubDate>Wed, 08 Apr 2020 21:59:56 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/new_test/</guid>
      
        <description>&lt;p&gt;这里是一篇最新的测试文章！&lt;/p&gt;
&lt;p&gt;重新测试！&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Blog</title>
      <link>https://wangwei9160.github.io/post/blog/</link>
      <pubDate>Wed, 08 Apr 2020 17:25:04 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/blog/</guid>
      
        <description>&lt;p&gt;Hello world!&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>markdown</title>
      <link>https://wangwei9160.github.io/post/markdown/</link>
      <pubDate>Wed, 08 Apr 2020 17:25:04 +0800</pubDate>
      
      <guid>https://wangwei9160.github.io/post/markdown/</guid>
      
        <description>&lt;h1 id=&#34;一级标题&#34;&gt;一级标题&lt;/h1&gt;
&lt;h2 id=&#34;二级标题&#34;&gt;二级标题&lt;/h2&gt;
&lt;h3 id=&#34;三级标题&#34;&gt;三级标题&lt;/h3&gt;
&lt;h4 id=&#34;四级标题&#34;&gt;四级标题&lt;/h4&gt;
&lt;h5 id=&#34;五级标题&#34;&gt;五级标题&lt;/h5&gt;
&lt;h6 id=&#34;六级标题&#34;&gt;六级标题&lt;/h6&gt;
&lt;h1 id=&#34;我是一级标题&#34;&gt;我是一级标题&lt;/h1&gt;
&lt;h2 id=&#34;我是二级标题&#34;&gt;我是二级标题&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;代码&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;import 
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;4个空格代码块
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有序列表&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;123&lt;/li&gt;
&lt;li&gt;345&lt;/li&gt;
&lt;li&gt;123&lt;br&gt;
1.234&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;无序列表&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;123
&lt;ul&gt;
&lt;li&gt;234&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;456
&lt;ul&gt;
&lt;li&gt;98&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;倾斜的字&lt;/em&gt;&lt;br&gt;
&lt;strong&gt;加粗的字&lt;/strong&gt;&lt;br&gt;
正常的字&lt;br&gt;
&lt;em&gt;斜的字&lt;/em&gt;&lt;br&gt;
&lt;del&gt;被删除的字&lt;/del&gt;&lt;br&gt;
&lt;em&gt;&lt;strong&gt;粗斜的字&lt;/strong&gt;&lt;/em&gt;&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;下划线&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;分割线&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;创建脚注格式类似这样 &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;区块&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第二层&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第三层&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;第一项
&lt;blockquote&gt;
&lt;p&gt;区块1&lt;br&gt;
区块2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;第二项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.baidu.com&#34;&gt;百度&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.baidu.com&#34;&gt;https://www.baidu.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.baidu.com/img/baidu_jgylogo3.gif&#34; alt=&#34;图片&#34; title=&#34;百度&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;表头很长的&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;表头很长的&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;表头很长的&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;单元格&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;单元格&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;单元格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;单元格&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;单元格&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;单元格&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用 &lt;!-- raw HTML omitted --&gt;Ctrl&lt;!-- raw HTML omitted --&gt;+&lt;!-- raw HTML omitted --&gt;Alt&lt;!-- raw HTML omitted --&gt;+&lt;!-- raw HTML omitted --&gt;Del&lt;!-- raw HTML omitted --&gt; 重启电脑&lt;/p&gt;
&lt;p&gt;\   反斜线
`   反引号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;星号
_   下划线
{}  花括号
[]  方括号
()  小括号&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;井字号&#34;&gt;井字号&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;加号&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;减号
.   英文句点
!   感叹号&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;git&#34;&gt;Git&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;hugo --theme= --baseUrl=&amp;quot;name.github.io&amp;quot; --buildDrafts
cd public
git add .
git commit -m &amp;quot;&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;这里是脚注1的内容。 &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
      
    </item>
    
  </channel>
</rss>
